- Make documentation libraries to reduce repeated code including:
  - Move the sponsor information for the volunteer, event, and participation certificates to a common function in utilities.
  - Fonts
  - Robot games iteration.
- Measurements need to fail or be purged when a competition is changed? Maybe add a competition field to the measurements table?
- Convert the scripts in app/controllers/competitions/admin.ts to use HTTP gets instead of posts for PDF downloads.
- Write a routine to produce participation certificates for all competitors. This would involve selecting all unique names from the competitor database, sorting by school, and producing a ODF document with a page for every competitor such that it can be bulk printed. I have the template to supply you.
- Update the label generation script to have the primary key from the database on the robot's label.

- Find a way to capture which competitors won 1st, 2nd and 3rd place such that the location of the trophies are captured.
- Build a system that can display a live scoreboard on a TV/projector.
- Gussy up the system with some pretty CSS.
- Disallow certain registration combinations, e.g. MSR past grade 10.
- Update registration page to reflect that slotting has occurred for a given competition.
- Create a script that will automatically scroll long lists when displayed in “Viewer” mode. e.g. a view only console for competitors to check ring assignments, etc.s
- Refactor Adpater/Serializer into a Handler. Use the new warp drive patterns.


